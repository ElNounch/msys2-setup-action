name: "Msys2"
description: "Prepare Msys2"
inputs:
  install_generic:
    description: "Required base packages"
    default: ""
  install_msystem:
    description: "Required arch-specific packages"
    default: ""
  msystem:
    description: "Variant of the environment to set by default: MINGW32, MINGW64, UCRT64, CLANG32, CLANG64 or CLANGARM64"
    default: "UCRT64"
outputs:
  pkgTarget:
    description: ""
    value: "${{ steps.pktListHash.pkgTarget }}"
defaults:
  run:
    step:
      shell: "msys2 -f {0}"
runs:
  using: composite
  steps:
    - name: 'Inject local action folder to PATH'
      shell: pwsh
      run: |
        "${env:GITHUB_ACTION_PATH}">>${env:GITHUB_PATH}
    - name: 'Compute paths and parameters'
      id: locate
      shell: pwsh
      run: |
        @"
        MSYS2_CMD=${env:GITHUB_WORKSPACE}\msys64\msys2_shell.cmd
        MSYSTEM=${{ inputs.msystem }}
        "@ >> ${env:GITHUB_ENV}
    - name: "Compute hash of required packages names"
      id: pktListHash
      shell: pwsh 
      run: |
        "pkgTarget=$((Get-FileHash -Algorithm SHA1 -InputStream ([IO.MemoryStream]::new([byte[]][char[]]`"${{ inputs.install_generic }} ${{ inputs.install_msystem }}` "))).Hash)" >> $env:GITHUB_OUTPUT
    - name: "Download self-extracting archive"
      shell: pwsh
      run: |
        Start-BitsTransfer "https://repo.msys2.org/distrib/msys2-x86_64-latest.sfx.exe" "msys2-x86_64-latest.sfx.exe"
    - name: "Extract"
      shell: pwsh
      run: |
        Start-Process -Wait -NoNewWindow -FilePath ".\msys2-x86_64-latest.sfx.exe" -ArgumentList @( '-y' )
        Remove-Item "msys2-x86_64-latest.sfx.exe"
    - name: "Initial launch"
#      working-directory: "${env.GITHUB_WORKSPACE}\\msys64"
      shell: "msys2.cmd -f {0}"
      run: |
        echo "Here we are..."
        sleep 5
#        Start-Process -NoNewWindow -Wait -FilePath ${{ steps.locate.outputs.msys2_shell_cmd }} -ArgumentList $( ${{ steps.locate.outputs.msys2_shell_args }},'-c','exit')
    - name: "Cache Pacman packages"
      uses: actions/cache@v3
      with:
        path: |
          "${env.GITHUB_WORKSPACE}\msys64\var\cache\pacman\pkg"
        key: "pacman-${{ steps.pktListHash.outputs.pkgTarget }}"
        restore-keys: pacman-
    - name: "Update package database and core packages"
      shell: "msys2.cmd -f {0}"
      run: |
        pacman -Syuu --noconfirm
        sleep 5
    - name: "Update core packages"
      shell: "msys2.cmd -f {0}"
      run: |
        pacman -Su --noconfirm
        sleep 5
    - name: "Install additionnal packages"
      shell: "msys2.cmd -f {0}"
      run: |
         source /etc/msystem
         [ -z "${{ inputs.install_generic }}" ] || (
           echo "${{ inputs.install_generic }}" | awk -v RS=" " -v ORS="\n" -- '' | xargs pacman -S --noconfirm
         )
         [ -z "${{ inputs.install_msystem }}" ] || (
           echo "${{ inputs.install_msystem }}" | awk -v prefix="$MINGW_PACKAGE_PREFIX" -v RS=" " -v ORS="\n" -- '{print prefix "-" $1}' | xargs pacman -S --noconfirm 
         )
